{"version":"1.134.0","results":[{"check_id":"javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage","path":"app.js","start":{"line":26,"col":7,"offset":1069},"end":{"line":26,"col":22,"offset":1084},"extra":{"message":"A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.","metadata":{"category":"security","references":["https://www.npmjs.com/package/csurf","https://www.npmjs.com/package/csrf","https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html"],"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"technology":["javascript","typescript","express"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage","shortlink":"https://sg.run/BxzR"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-cookie-settings.express-cookie-session-default-name","path":"app.js","start":{"line":33,"col":9,"offset":1178},"end":{"line":41,"col":3,"offset":1342},"extra":{"message":"Donâ€™t use the default session cookie name Using the default session cookie name can open your app to attacks. The security issue posed is similar to X-Powered-By: a potential attacker can use it to fingerprint the server and target attacks accordingly.","metadata":{"cwe":["CWE-522: Insufficiently Protected Credentials"],"owasp":["A02:2017 - Broken Authentication","A04:2021 - Insecure Design"],"source-rule-url":"https://expressjs.com/en/advanced/best-practice-security.html","category":"security","technology":["express"],"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","references":["https://owasp.org/Top10/A04_2021-Insecure_Design"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-cookie-settings.express-cookie-session-default-name","shortlink":"https://sg.run/1Z5x"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-domain","path":"app.js","start":{"line":33,"col":9,"offset":1178},"end":{"line":41,"col":3,"offset":1342},"extra":{"message":"Default session middleware settings: `domain` not set. It indicates the domain of the cookie; use it to compare against the domain of the server in which the URL is being requested. If they match, then check the path attribute next.","metadata":{"cwe":["CWE-522: Insufficiently Protected Credentials"],"owasp":["A02:2017 - Broken Authentication","A04:2021 - Insecure Design"],"source-rule-url":"https://expressjs.com/en/advanced/best-practice-security.html","category":"security","technology":["express"],"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","references":["https://owasp.org/Top10/A04_2021-Insecure_Design"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-domain","shortlink":"https://sg.run/rd41"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-expires","path":"app.js","start":{"line":33,"col":9,"offset":1178},"end":{"line":41,"col":3,"offset":1342},"extra":{"message":"Default session middleware settings: `expires` not set. Use it to set expiration date for persistent cookies.","metadata":{"cwe":["CWE-522: Insufficiently Protected Credentials"],"owasp":["A02:2017 - Broken Authentication","A04:2021 - Insecure Design"],"source-rule-url":"https://expressjs.com/en/advanced/best-practice-security.html","category":"security","technology":["express"],"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","references":["https://owasp.org/Top10/A04_2021-Insecure_Design"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-expires","shortlink":"https://sg.run/N4eG"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-httponly","path":"app.js","start":{"line":33,"col":9,"offset":1178},"end":{"line":41,"col":3,"offset":1342},"extra":{"message":"Default session middleware settings: `httpOnly` not set. It ensures the cookie is sent only over HTTP(S), not client JavaScript, helping to protect against cross-site scripting attacks.","metadata":{"cwe":["CWE-522: Insufficiently Protected Credentials"],"owasp":["A02:2017 - Broken Authentication","A04:2021 - Insecure Design"],"source-rule-url":"https://expressjs.com/en/advanced/best-practice-security.html","category":"security","technology":["express"],"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","references":["https://owasp.org/Top10/A04_2021-Insecure_Design"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-httponly","shortlink":"https://sg.run/ydBO"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-path","path":"app.js","start":{"line":33,"col":9,"offset":1178},"end":{"line":41,"col":3,"offset":1342},"extra":{"message":"Default session middleware settings: `path` not set. It indicates the path of the cookie; use it to compare against the request path. If this and domain match, then send the cookie in the request.","metadata":{"cwe":["CWE-522: Insufficiently Protected Credentials"],"owasp":["A02:2017 - Broken Authentication","A04:2021 - Insecure Design"],"source-rule-url":"https://expressjs.com/en/advanced/best-practice-security.html","category":"security","technology":["express"],"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","references":["https://owasp.org/Top10/A04_2021-Insecure_Design"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-path","shortlink":"https://sg.run/b7pd"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-secure","path":"app.js","start":{"line":33,"col":9,"offset":1178},"end":{"line":41,"col":3,"offset":1342},"extra":{"message":"Default session middleware settings: `secure` not set. It ensures the browser only sends the cookie over HTTPS.","metadata":{"cwe":["CWE-522: Insufficiently Protected Credentials"],"owasp":["A02:2017 - Broken Authentication","A04:2021 - Insecure Design"],"source-rule-url":"https://expressjs.com/en/advanced/best-practice-security.html","category":"security","technology":["express"],"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","references":["https://owasp.org/Top10/A04_2021-Insecure_Design"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-secure","shortlink":"https://sg.run/9oKz"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-session-hardcoded-secret.express-session-hardcoded-secret","path":"app.js","start":{"line":34,"col":5,"offset":1192},"end":{"line":34,"col":17,"offset":1204},"extra":{"message":"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module).","metadata":{"interfile":true,"cwe":["CWE-798: Use of Hard-coded Credentials"],"references":["https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"],"owasp":["A07:2021 - Identification and Authentication Failures"],"category":"security","technology":["express","secrets"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"HIGH","confidence":"HIGH","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Hard-coded Secrets"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-session-hardcoded-secret.express-session-hardcoded-secret","shortlink":"https://sg.run/LYvG"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-cookie-settings.express-cookie-session-default-name","path":"app.js","start":{"line":54,"col":4,"offset":1654},"end":{"line":59,"col":6,"offset":1818},"extra":{"message":"Donâ€™t use the default session cookie name Using the default session cookie name can open your app to attacks. The security issue posed is similar to X-Powered-By: a potential attacker can use it to fingerprint the server and target attacks accordingly.","metadata":{"cwe":["CWE-522: Insufficiently Protected Credentials"],"owasp":["A02:2017 - Broken Authentication","A04:2021 - Insecure Design"],"source-rule-url":"https://expressjs.com/en/advanced/best-practice-security.html","category":"security","technology":["express"],"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","references":["https://owasp.org/Top10/A04_2021-Insecure_Design"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-cookie-settings.express-cookie-session-default-name","shortlink":"https://sg.run/1Z5x"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-domain","path":"app.js","start":{"line":54,"col":4,"offset":1654},"end":{"line":59,"col":6,"offset":1818},"extra":{"message":"Default session middleware settings: `domain` not set. It indicates the domain of the cookie; use it to compare against the domain of the server in which the URL is being requested. If they match, then check the path attribute next.","metadata":{"cwe":["CWE-522: Insufficiently Protected Credentials"],"owasp":["A02:2017 - Broken Authentication","A04:2021 - Insecure Design"],"source-rule-url":"https://expressjs.com/en/advanced/best-practice-security.html","category":"security","technology":["express"],"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","references":["https://owasp.org/Top10/A04_2021-Insecure_Design"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-domain","shortlink":"https://sg.run/rd41"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-expires","path":"app.js","start":{"line":54,"col":4,"offset":1654},"end":{"line":59,"col":6,"offset":1818},"extra":{"message":"Default session middleware settings: `expires` not set. Use it to set expiration date for persistent cookies.","metadata":{"cwe":["CWE-522: Insufficiently Protected Credentials"],"owasp":["A02:2017 - Broken Authentication","A04:2021 - Insecure Design"],"source-rule-url":"https://expressjs.com/en/advanced/best-practice-security.html","category":"security","technology":["express"],"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","references":["https://owasp.org/Top10/A04_2021-Insecure_Design"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-expires","shortlink":"https://sg.run/N4eG"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-httponly","path":"app.js","start":{"line":54,"col":4,"offset":1654},"end":{"line":59,"col":6,"offset":1818},"extra":{"message":"Default session middleware settings: `httpOnly` not set. It ensures the cookie is sent only over HTTP(S), not client JavaScript, helping to protect against cross-site scripting attacks.","metadata":{"cwe":["CWE-522: Insufficiently Protected Credentials"],"owasp":["A02:2017 - Broken Authentication","A04:2021 - Insecure Design"],"source-rule-url":"https://expressjs.com/en/advanced/best-practice-security.html","category":"security","technology":["express"],"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","references":["https://owasp.org/Top10/A04_2021-Insecure_Design"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-httponly","shortlink":"https://sg.run/ydBO"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-path","path":"app.js","start":{"line":54,"col":4,"offset":1654},"end":{"line":59,"col":6,"offset":1818},"extra":{"message":"Default session middleware settings: `path` not set. It indicates the path of the cookie; use it to compare against the request path. If this and domain match, then send the cookie in the request.","metadata":{"cwe":["CWE-522: Insufficiently Protected Credentials"],"owasp":["A02:2017 - Broken Authentication","A04:2021 - Insecure Design"],"source-rule-url":"https://expressjs.com/en/advanced/best-practice-security.html","category":"security","technology":["express"],"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","references":["https://owasp.org/Top10/A04_2021-Insecure_Design"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-path","shortlink":"https://sg.run/b7pd"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-secure","path":"app.js","start":{"line":54,"col":4,"offset":1654},"end":{"line":59,"col":6,"offset":1818},"extra":{"message":"Default session middleware settings: `secure` not set. It ensures the browser only sends the cookie over HTTPS.","metadata":{"cwe":["CWE-522: Insufficiently Protected Credentials"],"owasp":["A02:2017 - Broken Authentication","A04:2021 - Insecure Design"],"source-rule-url":"https://expressjs.com/en/advanced/best-practice-security.html","category":"security","technology":["express"],"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","references":["https://owasp.org/Top10/A04_2021-Insecure_Design"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-secure","shortlink":"https://sg.run/9oKz"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-session-hardcoded-secret.express-session-hardcoded-secret","path":"app.js","start":{"line":55,"col":7,"offset":1670},"end":{"line":55,"col":19,"offset":1682},"extra":{"message":"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module).","metadata":{"interfile":true,"cwe":["CWE-798: Use of Hard-coded Credentials"],"references":["https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"],"owasp":["A07:2021 - Identification and Authentication Failures"],"category":"security","technology":["express","secrets"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"HIGH","confidence":"HIGH","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Hard-coded Secrets"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-session-hardcoded-secret.express-session-hardcoded-secret","shortlink":"https://sg.run/LYvG"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}}],"errors":[{"code":3,"level":"warn","type":"Lexical error","message":"Lexical error at line licenses.json:1:\n unrecognised symbol, in token rule:ï¿½","path":"licenses.json"},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line semgrep-report.json:1:\n missing element","path":"semgrep-report.json"}],"paths":{"scanned":[".gitignore","BackupBD/ArtGallery.sql","BackupBD/insert.sql","app.js","banco.js","bin/www","licenses.json","logger.js","middlewares/adm.js","middlewares/autenticado.js","package-lock.json","package.json","public/javascripts/perfil.js","public/stylesheets/adm.css","public/stylesheets/style.css","public/stylesheets/styleCadApr.css","public/stylesheets/styleCadArt.css","public/stylesheets/styleCadastroOP.css","public/stylesheets/styleEditarPerfil.css","public/stylesheets/styleNovaSenha.css","public/stylesheets/stylePerfil.css","public/stylesheets/styleRecuperar.css","public/stylesheets/styleSuporte.css","public/stylesheets/styleVerificarCodigo.css","public/uploads/categorias/1751936817026-274946554.jpg","public/uploads/categorias/1751936916995-604859868.jpg","public/uploads/categorias/1751937371324-809485387.jpg","public/uploads/categorias/1751938375588-512834181.jpg","public/uploads/estrela_cheia.svg","public/uploads/estrela_vazia.svg","public/uploads/fotos-perfil/1751847916379-941670654.jpg","public/uploads/fotos-perfil/1751848067339-85516334.jpg","public/uploads/fotos-perfil/1751849137463-945048092.jpg","public/uploads/fotos-perfil/1751849686878-327480604.jpg","public/uploads/fotos-perfil/1751904916504-958162780.jpg","public/uploads/fotos-perfil/1752005655679-335799428.jpg","public/uploads/fotos-perfil/1752005772780-225699958.jpg","public/uploads/icon-ag.svg","public/uploads/imagem.png","public/uploads/obras/1751940061404-52339005.jpg","public/uploads/obras/1751940368730-354958001.jpg","public/uploads/obras/1751940801736-861935798.jpg","routes/_adm/_cadastros.js","routes/_adm/_index.js","routes/_adm/_obras.js","routes/_adm/_suporte.js","routes/_adm/_usuarios.js","routes/cadastro.js","routes/categorias.js","routes/colecao.js","routes/explorar.js","routes/index.js","routes/login.js","routes/obras.js","routes/perfil.js","routes/recuperar.js","routes/suporte.js","routes/verificar-email.js","semgrep-report.json","utils/upload.js","views/_adm/_cadastroArtista.ejs","views/_adm/_cadastroCategoria.ejs","views/_adm/_categorias.ejs","views/_adm/_edicaoCategoria.ejs","views/_adm/_favoritos.ejs","views/_adm/_index.ejs","views/_adm/_obras.ejs","views/_adm/_suporte.ejs","views/_adm/_usuariosTotal.ejs","views/cadApreciador.ejs","views/cadArtista.ejs","views/cadastro.ejs","views/categorias.ejs","views/categoriasID.ejs","views/colecaoID.ejs","views/colecoes.ejs","views/criarColecao.ejs","views/edicaoObra.ejs","views/editarPerfil.ejs","views/error.ejs","views/explorar.ejs","views/index.ejs","views/login.ejs","views/nova-senha.ejs","views/novaObra.ejs","views/obraID.ejs","views/perfil.ejs","views/perfilArtista.ejs","views/perfilVisitante.ejs","views/recuperar.ejs","views/selecionarColecao.ejs","views/suporte.ejs","views/verificar-codigo.ejs"]},"time":{"rules":[],"rules_parse_time":1.282243013381958,"profiling_times":{"config_time":1.6218786239624023,"core_time":3.3164660930633545,"ignores_time":0.0017228126525878906,"total_time":4.940758943557739},"parsing_time":{"total_time":0.0,"per_file_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_files":[]},"scanning_time":{"total_time":4.704549551010132,"per_file_time":{"mean":0.02208708709394429,"std_dev":0.007823690410192074},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_files":[]},"matching_time":{"total_time":0.0,"per_file_and_rule_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_files":[]},"tainting_time":{"total_time":0.0,"per_def_and_rule_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_defs":[]},"fixpoint_timeouts":[],"prefiltering":{"project_level_time":0.0,"file_level_time":0.0,"rules_with_project_prefilters_ratio":0.0,"rules_with_file_prefilters_ratio":0.993614931237721,"rules_selected_ratio":0.12094793713163064,"rules_matched_ratio":0.12094793713163064},"targets":[],"total_bytes":0,"max_memory_bytes":1096599680},"engine_requested":"OSS","skipped_rules":[]}
