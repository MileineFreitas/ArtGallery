name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('ArtGallery/ArtGallery/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      #- name: Instalar dependências
        #run: npm install
        #working-directory: ArtGallery/ArtGallery

  test:
    name: Testes
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Instalar dependências
        run: npm install
        working-directory: ArtGallery

      - name: Executar testes
        run: npm test
        working-directory: ArtGallery/ArtGallery

      - name: Analisar licenças
        run: npx license-checker --json > licenses.json
        working-directory: ArtGallery/ArtGallery

      - name: Upload licenses.json
        uses: actions/upload-artifact@v4
        with:
          name: licenses-report
          path: ArtGallery/ArtGallery/licenses.json

  sast:
    name: SAST (Semgrep)
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Instalar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Instalar Semgrep
        run: pip install semgrep

      - name: Rodar Semgrep
        run: semgrep --config auto ArtGallery/ArtGallery --json > semgrep-report.json

      - name: Upload semgrep-report.json
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-report
          path: ArtGallery/ArtGallery/semgrep-report.json

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: sast

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Implantação
        run: |
          # Substitua pelos comandos reais de deploy
          echo "Implantação realizada com sucesso!"
